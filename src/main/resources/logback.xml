<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<!-- 自定义属性名称 -->
	<property name="App_Name" value="techblog2" />	
	
	<!-- 输出到控制台 -->
	<appender name="techblog-log-console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<!-- 格式化日志输出格式 -->
			<pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
		</encoder>
	</appender>
	
	<!-- 输出到文件 -->
	<appender name="techblog-log-file" class="ch.qos.logback.core.FileAppender">
		<!-- 活动日志名称 -->
		<file>log/${App_Name}/testFile.log</file>
		<!-- 是否接着上次的结尾继续，默认为true -->
		<!-- <append>true</append> -->
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
		</encoder>
	</appender>
	
	<!-- 输出到滚动文件（时间策略） -->
	<appender name="techblog-log-rollingfiletime" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 活动日志名称 -->
		<file>/log/${App_Name}/testRollingFileTime.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 滚动日志名称 -->
            <!-- 按最小的单位来，如果设置了mm，就是每分钟归档一次 -->
			<fileNamePattern>/log/${App_Name}/testRollingFileTime-%d{yyyy-MM-dd_HH_mm}-%i.log.zip</fileNamePattern>
			<maxHistory>30</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 如果时间还没到，活动日志超过2KB，就归档一次，用%i区分 -->
				<maxFileSize>2KB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- 归档文件最长保留时间，没有时间单位，如果是每分钟归档一次，就是30分钟清除一次 -->
            <!-- <maxHistory>30</maxHistory> -->
		</rollingPolicy>
		<encoder>
			<!-- 格式化日志输出格式 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
		</encoder>
	</appender>
	
	<!-- 输出到滚动文件（窗口策略） -->
	<appender name="techblog-log-rollingfilefixed" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 活动日志名称 -->
		<file>log/${App_Name}/testRollingFileFixed.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<!-- 滚动日志名称 -->
			<fileNamePattern>log/${App_Name}/testRollingFileFixed-%i.log.zip</fileNamePattern>
			<maxHistory>30</maxHistory>
			<!-- 序号从1开始 -->
			<minIndex>1</minIndex>
			<!-- 文件超过3个就开始覆盖之前的 -->
			<maxIndex>3</maxIndex>
		</rollingPolicy>
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<!-- 活动日志超过2KB，就归档一次，用%i区分 -->
			<maxFileSize>2KB</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<!-- 格式化日志输出格式 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>
		</encoder>
	</appender>
	
	<!-- 自定义打印级别和范围 -->
    <!-- additivity是否输出到父输出源 -->
    <!-- level包括TRACE、DEBUG、INFO、WARN、ERROR -->
	<logger name="org.xs.techblog" level="INFO" additivity="false">
		<appender-ref ref="techblog-log-console" />
		<appender-ref ref="techblog-log-file" />
		<appender-ref ref="techblog-log-rollingfiletime" />
		<appender-ref ref="techblog-log-rollingfilefixed" />
	</logger>
	
	<!-- 默认的打印级别 -->
	<root level="INFO">
		<!-- <appender-ref ref="techblog-log" /> -->
	</root>
</configuration>
